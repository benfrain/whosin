## v1

- input box allows you to add names [fixed top/bottom] [x]
- Each name can be set to in or out [x]
- Tool splits those that are in into teams [default to splitting to 2]
- swiping a name gives option to delete it []
- tool tray maybe (that could house the split, download, upload, delete-all)
- localStorage [x]
- show currentCount of whosin [x]
- If there are no people 'in' hide the splitter [x]

## v2
- Use vCard Parser to include contact info such as phone/email
- split multiplier [tools let's you set divider]
- save and import JSON [x]
- service worker
- animations for add/remove
- pay mode (a toggle in settings allows 'in' users to have an additional toggle to show they have paid)

## v3 
- multiple lists/teams
- undo for delete (store person object in a trash area which can be re-instated from tools)

### Functions

- itemAdd
- itemPrimeDelete
- itemDelete
- itemToggleMark
- itemSplit
- inputShow
- toolTrayShow
- toolTrayHide
- dataLoad
- dataSave
- updateCurrentCount

## data
function whoIsIn() {
    this.currentCount = 0;
    this.whoisin = [];
    this.showingInput = false;
    this.showingTool = false;
    this.observers = [];
}

### example person data

{
    name:"Ben",
    contactNumber: null,
    contactEmail: null,
    paid: false,
    marked: false,
    team: null,
}

## listeners
swipe left on names, tap on right 44px => enter delete mode `itemPrimeDelete()`
swipe right of click anywhere else on name => mark In `itemToggleMark` 
click on delete mode => updates the data `itemDelete()`
click plus next to input => `itemAdd`
click on split icon in tools => `itemSplit`
click add icon => `inputShow`
swipe down anywhere => `inputShow`


#### Reasons
Use Yarn instead of NPM
Use ES2015/TypeScript (for easy imports)
Use webpack
Learn service workers
Progressive web app
Design something





### Notes
file type input is VERY difficult to style so wrapped this in a label element, hid the input and styled the label instead


## 16.6.17
Made OK progress on getting the items to travel to their new position. However, need to ensure that items are sorted so that last 'in' is the first to display. At present, not sure how they are being sorted. Commented out 

                    // splitTeams(wi.divisor);
and not really sure what is going on now.

## 26.10.17
AMended the movement functions and commented a few bits and pieces. Clicked items now move into position with a nice transition.

To do:
- Need to sort unselecting players so they move back now. 
- Apply the new style menu, not entirely sold on the design but take a look.
- When a player is unselected, also need to remove the team they are in.



## 11.11.17
Arrrggghhhhhhh making 'In' working well but returning no working. The event listener for transition end isn't doing anything. Debugger seems the best place to try and fix. When I make a item in it flows through correctly, when return it doesn't.

# 22.11.17
In and Out both working well now. Also consolidated the movement into one function.

* font for interface
* fab button 2/3 the way down
* spinner for app shell
* 

# 24.11.17
Renamed from Whos in to `IN/OUT`

# 1.4.18
There is no transition on the wrapper when moving an item down as it is freshly created in the DOM (so cannot transition from any existing state.). Try using an animation instead to fix this.
=======
- If a user has a split set, I would expect each subsequent person added to get automatically split (e.g. if a two way split of 9 people, first 4 one team, last 5 the other).
- Need to store the team split in local storage too. That way, when a user loads in their data, the split will be correct also.

- need a set of SVG defs that can be loaded in at the outset in the shell

- thought, maybe we need a 'shuffle/mix' button under the names when we have a team split going on. Don't think that needs to animate (yet) but maybe the movement function can be re factored such that it takes an element and destination sort order and it can just sort the movement out. That should then work on a loop of elements and destinations and even in reverse (for removing).

### Need to sort the ordering
- When a person is added, they need to go to the beginning.
- When a person is removed, they need to be 'popped' and the subsequent items re-ordered (incidentally, we 

### Selections and fly out menu style: https://codepen.io/benfrain/pen/yXvwBL
