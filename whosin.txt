## v1

- input box allows you to add names [fixed top/bottom] [x]
- Each name can be set to in or out [x]
- Tool splits those that are in into teams [default to splitting to 2]
- swiping a name gives option to delete it []
- tool tray maybe (that could house the split, download, upload, delete-all)
- localStorage [x]
- show currentCount of whosin [x]
- If there are no people 'in' hide the splitter [x]

## v2
- Use vCard Parser to include contact info such as phone/email
- split multiplier [tools let's you set divider]
- save and import JSON [x]
- service worker
- animations for add/remove
- pay mode (a toggle in settings allows 'in' users to have an additional toggle to show they have paid)

## v3 
- multiple lists/teams
- undo for delete (store person object in a trash area which can be re-instated from tools)

### Functions

- itemAdd
- itemPrimeDelete
- itemDelete
- itemToggleMark
- itemSplit
- inputShow
- toolTrayShow
- toolTrayHide
- dataLoad
- dataSave
- updateCurrentCount

## data
function whoIsIn() {
    this.currentCount = 0;
    this.whoisin = [];
    this.showingInput = false;
    this.showingTool = false;
    this.observers = [];
}

### example person data

{
    name:"Ben",
    contactNumber: null,
    contactEmail: null,
    paid: false,
    marked: false,
    team: null,
}

## listeners
swipe left on names, tap on right 44px => enter delete mode `itemPrimeDelete()`
swipe right of click anywhere else on name => mark In `itemToggleMark` 
click on delete mode => updates the data `itemDelete()`
click plus next to input => `itemAdd`
click on split icon in tools => `itemSplit`
click add icon => `inputShow`
swipe down anywhere => `inputShow`


#### Reasons
Use Yarn instead of NPM
Use ES2015/TypeScript (for easy imports)
Use webpack
Learn service workers
Progressive web app
Design something





### Notes
file type input is VERY difficult to style so wrapped this in a label element, hid the input and styled the label instead


## 16.6.17
Made OK progress on getting the items to travel to their new position. However, need to ensure that items are sorted so that last 'in' is the first to display. At present, not sure how they are being sorted. Commented out 

                    // splitTeams(wi.divisor);
and not really sure what is going on now.

## 26.10.17
AMended the movement functions and commented a few bits and pieces. Clicked items now move into position with a nice transition.

To do:
- Need to sort unselecting players so they move back now. 
- Apply the new style menu, not entirely sold on the design but take a look.
- When a player is unselected, also need to remove the team they are in.



## 11.11.17
Arrrggghhhhhhh making 'In' working well but returning no working. The event listener for transition end isn't doing anything. Debugger seems the best place to try and fix. When I make a item in it flows through correctly, when return it doesn't.

# 22.11.17
In and Out both working well now. Also consolidated the movement into one function.

* font for interface
* fab button 2/3 the way down
* spinner for app shell
* 

# 24.11.17
Renamed from Whos in to `IN/OUT`

# 1.4.18
There is no transition on the wrapper when moving an item down as it is freshly created in the DOM (so cannot transition from any existing state.). Try using an animation instead to fix this.
=======
- If a user has a split set, I would expect each subsequent person added to get automatically split (e.g. if a two way split of 9 people, first 4 one team, last 5 the other).
- Need to store the team split in local storage too. That way, when a user loads in their data, the split will be correct also.

- need a set of SVG defs that can be loaded in at the outset in the shell

- thought, maybe we need a 'shuffle/mix' button under the names when we have a team split going on. Don't think that needs to animate (yet) but maybe the movement function can be re factored such that it takes an element and destination sort order and it can just sort the movement out. That should then work on a loop of elements and destinations and even in reverse (for removing).

### Need to sort the ordering
- When a person is added, they need to go to the beginning.
- When a person is removed, they need to be 'popped' and the subsequent items re-ordered (incidentally, we 

### Selections and fly out menu style: https://codepen.io/benfrain/pen/yXvwBL

## 17.5.18
Now need to sort the add button so players can be added to existing and new events

Also, when you click to edit an event name, change the text but then chose 'cancel' you need to revert to the prior value. [x]


## 21.5.18


The delete btn (around line 220) should remove it from view but a cancel should bring it back (maybe just mark it with a class so it goes display none) [x]

- When you have the event menu open and click the add button it should also close the menu [x]

In the save function, we need to use the eventsToDelete array contents (if greater than 0) to remove the matching events from the data.

Items can now be removed – see the `removeDeletedEvents()` but need someway to set the new selected event if there is another one to load or somehow prompt to create a new event if there are no events.

## 20.6.18

- Need to make the team switcher menu hide when switching event or adding a name.[x]
- Edit Players mode needs adding; save and cancel function need writing [x]
- Need a click mask on the event switcher [x]
- If editing players, clicking the switch event control should turn off editing players [x]
- slat names and event names in the event menu need a span around them so that they can sit in the middle but have the underline  [x]
- maybe radio buttons and 'no splits' for the Split to teams menu?? [v2!]
- Make the load/save button (maybe the cloud or other icon with the text??) [x]
- The Event switcher needs full height buttons. Maybe need to tweak the HTML here? [x]
- 25 char limit on event names and player names (regex??) []
- adding event [x] and player [] should animate in, not snap []
- remove main player name input box and associated CSS []
- maybe add small logo top left []
- change count to '6 confirmed' [x]
- adding player in bottom bar and functionality []
- add a count of actual players (not confirmed) to root. Less than 2 hide the 'split to teams' and if there are none, hide 'edit players' [x]
- style 'io-EditBar_AddSVG' so if roster count is zero it pulses larger to prompt someone to add a name [x]

Bug:

When you have added an event, but then choose something else from the menu, it should choose that event, and remove the temp added event.Currently on 355 of io.ts [x]
